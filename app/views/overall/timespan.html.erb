<% if @UserAllowed == 'true' %>
<p>
	<div id="timespanAjax">
		<%= form_tag("/whitewall_timespan", method: "get") do %>
		<input type="text" id="from" name="from" value="<%= @fromInput %>">
		<label for="from"><%= l(:label_whitewall_timespan_to) %></label>
		<input type="text" id="to" name="to" value="<%= @toInput %>">
		<input type="submit" value="<%= l(:label_whitewall_timespan_apply) %>" />

		<div id="wallFunctions">
				<span id="showUsers">
					<div><%= l(:label_whitewall_projects) %></div>
					<ul>
						<li class="invert"><b><%= l(:whitewall_users_select) %></b><input type="submit" value="<%= l(:label_whitewall_timespan_apply) %>" /></li>
						<% for project in @projectsAll -%>
							<li class="<%= cycle('odd', 'even') %>">
								<label for="project<%= project.id %>">
									<% if @projects.include? project %>
										<input checked="checked" type="checkbox" id="project<%= project.id %>" name="project_select[]" value="<%= project.id %>">
									<% else %>
										<input type="checkbox" id="project<%= project.id %>" name="project_select[]" value="<%= project.id %>">
									<% end %>
									<%= project.name %>
								</label>
							</li>
						<% end -%>
					</ul>
				</span>
			</div>
		<% end %>
	</div>
	
	<div id="ticketsPerTracker" class="timeGraph"></div>
	<button class="ticketsPerTracker">Reset Zoom</button>
	
	<div id="commentsTickets" class="timeGraph"></div>
	<button class="commentsTickets">Reset Zoom</button>
	
	<div id="bugs" class="timeGraph"></div>
	<button class="bugs">Reset Zoom</button>
	
	<div id="ticketsPerSystem" class="timeGraph"></div>
	<button class="ticketsPerSystem">Reset Zoom</button>

	<script type="text/javascript">
		// GRAPH DATA
 		var bugsTotal = [
		<% @fromDate.upto(@toDate).each_with_index do |date, n| -%>
		  ['<%= date.strftime('%Y-%m-%d') %>', <%= @bugsTotal[n] %>],
		<% end -%>
		];

		var bugsClosed = [
		<% @fromDate.upto(@toDate).each_with_index do |date, n| -%>
		  ['<%= date.strftime('%Y-%m-%d') %>', <%= @bugsClosed[n] %>],
		<% end -%>
		];
		var bugsOpen = [
		<% @fromDate.upto(@toDate).each_with_index do |date, n| -%>
		  ['<%= date.strftime('%Y-%m-%d') %>', <%= @bugsOpen[n] %>],
		<% end -%>
		];

		var issues = [
		<% @fromDate.upto(@toDate).each_with_index do |date, n| -%>
		  ['<%= date.strftime('%Y-%m-%d') %>', <%= @issues[n] %>],
		<% end -%>
		];
		
		var journals = [
		<% @fromDate.upto(@toDate).each_with_index do |date, n| -%>
		  ['<%= date.strftime('%Y-%m-%d') %>', <%= @journals[n] %>],
		<% end -%>
		];
	
		<% for tracker in @trackers -%>
			var <%= tracker.name %> = [
			<% for date in @fromDate.upto(@toDate) -%>
			  ['<%= date.strftime('%Y-%m-%d') %>', <%= tracker["issues#{date}"] %>],
			<% end -%>
			];				
		<% end -%>

		<% @system.each_with_index do |system, index| -%>
			var <%= system.gsub(' ', '') %> = [
				<% @fromDate.upto(@toDate).each_with_index do |date, n| -%>
					['<%= date.strftime('%Y-%m-%d') %>', <%= @systemAll[index][n] %>],
				<% end -%>
			];				
		<% end -%>
		$(document).ready(function(){
			$('#timespanAjax form').submit(function(e) {
				var from = $('#from');
				var to = $('#to');
				e.preventDefault();
				
				if(Date.parse(from.val())) {
					$(from).removeClass('error');
				} else {
					$(from).addClass('error');
				}
				if(Date.parse(to.val())) {
					$(to).removeClass('error');
				} else {
					$(to).addClass('error');
				}
				if(Date.parse(from.val()) && Date.parse(to.val())) {
					var projects = '';
					$('#showUsers input[type=checkbox]').each(function(e) {
					  if($(this).attr('checked')) {
					  	projects += '&project_select[]=' + $(this).val();					  	
					  }
					});
					$.ajax({
						dataType: "html",
						url: "/whitewall_timespan",
						data: 'from=' + from.val() + '&to=' + to.val() + projects,
						success: function(data) {
							$('#ui-tabs-1').html(data);
						},
						error: function(data) {
							alert('Error: Please reload!');
						}
					});
				} else {

				}

			});
	
			$.jqplot.config.enablePlugins = true;
			$.jqplot.config.defaultColors = ["rgba(75, 178, 198, 0.9)", "rgba(234, 162, 40, 0.9)", "rgba(87, 139, 184, 0.9)", "rgba(140, 121, 84, 0.9)", "rgba(62, 140, 156, 0.9)", 61];
			$.jqplot.config.defaultTickFormatString = "%#d/%#m/%Y";
			var grid = {
			        drawGridLines: true,
			        gridLineColor: '#dcdcdc',
			        background: '#fafafa',
			        borderColor: '#fafafa',
			        borderWidth: 1.0,
			        shadow: false,
			        shadowAlpha: 0.07,
			};
			var axes = {
	          yaxis: {
	          	min: 0
	          },
	          xaxis: {
                renderer:$.jqplot.DateAxisRenderer,
                rendererOptions:{
                    tickRenderer:$.jqplot.CanvasAxisTickRenderer
                },
                min: '<%= @fromDate.strftime('%Y-%m-%d') %>',
				max: '<%= @toDate.strftime('%Y-%m-%d') %>',
                tickOptions:{
                    fontSize:'6pt',
                }
              }
		    };
		    var axesDefaults = {
				tickRenderer: $.jqplot.CanvasAxisTickRenderer,
				tickOptions: {
					fontSize: '6pt'
				}
		    };
		    var highlighter = {
		        show: true,
		        formatString:'Date: %s | Anzahl %s'
		    };
		    var cursor = {
		        show: true,
		        zoom:true,
		        showTooltip:false,
		        constrainZoomTo: 'x'
		    };
		// TICKETS PER TRACKER
		var ticketsPerTracker = $.jqplot('ticketsPerTracker', <%= @chartLines.to_s.gsub('"', '') %>, {
		      title: 'Tickets by Tracker',
		       legend:{
		           renderer: $.jqplot.EnhancedLegendRenderer,
		           show:true
		        },
		      grid: grid,
		      series: [
		      	<% for tracker in @trackers -%>
					{label: '<%= tracker.name %>'},
				<% end -%>
					],			      
			    seriesDefaults: {
			        showMarker: false
			  },			          
		      axesDefaults: axesDefaults,
		      axes: axes,
		      highlighter: highlighter,
		      cursor: cursor
		  });
		  $('.ticketsPerTracker').click(function() { ticketsPerTracker.resetZoom() });	
		// COMMENTS VS TICKETS
		var commentsTickets = $.jqplot('commentsTickets', [journals,issues], {
			title: 'Tickets vs. Comments',
			legend:{
			    renderer: $.jqplot.EnhancedLegendRenderer,
			    show:true
			},
			fillBetween: {
			    series1: 0,
			    series2: 1,
			    color: "rgba(196, 196, 196, 0.4)",
				baseSeries: 0,
				fill: true
			},
			grid: grid,	
		    series: [
					{label: '<%= l(:journals) %>'},
					{label: '<%= l(:issues) %>'}
					],
		    seriesDefaults: {
		        showMarker: false,
		        fill: false,
		    },			          
			axesDefaults: axesDefaults,
			axes: axes,
			highlighter: highlighter,
			cursor: cursor
		  });
		  $('.commentsTickets').click(function() { commentsTickets.resetZoom() });
		// BUGS OVERVIEW
		var bugs = $.jqplot('bugs', [bugsOpen,bugsClosed,bugsTotal], {
			title: 'Bugs Overview',
			legend:{
				renderer: $.jqplot.EnhancedLegendRenderer,
				show:true
			},
			fillBetween: {
				series1: 0,
				series2: 1,
				color: "rgba(196, 196, 196, 0.4)",
				baseSeries: 0,
				fill: true
			},
			grid: grid,
			series: [
				{label: 'Bugs Open'},
				{label: 'Bugs Closed'},
				{label: 'Bugs Total'}
			],
			seriesDefaults: {
				showMarker: false,
				fill: false,
			},			          
			axesDefaults: axesDefaults,
			axes: axes,
			highlighter: highlighter,
			cursor: cursor
		  });
		  $('.bugs').click(function() { bugs.resetZoom() });
		// TICKETS PER SYSTEM
		var ticketsPerSystem = $.jqplot('ticketsPerSystem', <%= @system.to_s.gsub('"', '').gsub(' ', '') %>, {
			title: 'Tickets by System',
			legend:{
				renderer: $.jqplot.EnhancedLegendRenderer,
				show:true
			},
			grid: grid,
			series: [
			<% for system in @system -%>
				{label: '<%= system %>'},
			<% end -%>
			],			      
			seriesDefaults: {
			    showMarker: false
			},			          
			axesDefaults: axesDefaults,
			axes: axes,
			highlighter: highlighter,
			cursor: cursor
		});
		$('.ticketsPerSystem').click(function() { ticketsPerSystem.resetZoom() });
		
		var delay = (function(){
		  var timer = 0;
		  return function(callback, ms){
		    clearTimeout (timer);
		    timer = setTimeout(callback, ms);
		  };
		});
		$(window).bind('resize', function(event, ui) {
            delay(function(){
	            ticketsPerTracker.replot();
	            commentsTickets.replot();
	            bugs.replot();
	            ticketsPerSystem.replot();
		    }, 500);
        });
	});
	</script>
	<%= javascript_include_tag 'script', :plugin => 'whitewall' %>
</p>
<% end %>